// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SVSignalR.Server.Data;

namespace SVSignalR.Server.Migrations
{
    [DbContext(typeof(SVSignalRContext))]
    [Migration("20210625023039_add osmatchecklist table")]
    partial class addosmatchecklisttable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SVSignalR.Shared.BookModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.AddressModel", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commune")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommuneId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.CovidPlanModel", b =>
                {
                    b.Property<string>("CovidPlanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HealthStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CovidPlanId");

                    b.ToTable("CovidPlanList");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.OrderModel", b =>
                {
                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ETD")
                        .HasColumnType("datetime2");

                    b.Property<string>("GTNPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("LastCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MidsoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reviser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShoeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UCustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductNo");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.OutsoleSupplierModel", b =>
                {
                    b.Property<int>("OutsoleSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierOperation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutsoleSupplierId");

                    b.ToTable("OutsoleSuppliers");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.OutsoleWHCheckModel", b =>
                {
                    b.Property<int>("OSCheckingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorId")
                        .HasColumnType("int");

                    b.Property<int>("Excess")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRelease")
                        .HasColumnType("bit");

                    b.Property<int>("OutsoleSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Reject")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleasedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReturnReject")
                        .HasColumnType("int");

                    b.Property<int>("ReturnRemark")
                        .HasColumnType("int");

                    b.Property<string>("SizeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeNoUpper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingCard")
                        .HasColumnType("int");

                    b.HasKey("OSCheckingID");

                    b.HasIndex("OutsoleSupplierId");

                    b.HasIndex("ProductNo");

                    b.ToTable("OutsoleMaterialCheckingList");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.SizeRunModel", b =>
                {
                    b.Property<int>("SizeRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MidsoleSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutsoleSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SizeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UpdateOutsoleSizeByArticle")
                        .HasColumnType("bit");

                    b.HasKey("SizeRunId");

                    b.HasIndex("ProductNo");

                    b.ToTable("SizeRun");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.WorkerModel", b =>
                {
                    b.Property<string>("WorkerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Factory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.OutsoleWHCheckModel", b =>
                {
                    b.HasOne("SVSignalR.Shared.Models.MasterSchedule.OutsoleSupplierModel", "Supplier")
                        .WithMany()
                        .HasForeignKey("OutsoleSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SVSignalR.Shared.Models.MasterSchedule.OrderModel", "Order")
                        .WithMany()
                        .HasForeignKey("ProductNo");

                    b.Navigation("Order");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.SizeRunModel", b =>
                {
                    b.HasOne("SVSignalR.Shared.Models.MasterSchedule.OrderModel", "Order")
                        .WithMany("SizeRuns")
                        .HasForeignKey("ProductNo");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SVSignalR.Shared.Models.MasterSchedule.OrderModel", b =>
                {
                    b.Navigation("SizeRuns");
                });
#pragma warning restore 612, 618
        }
    }
}
